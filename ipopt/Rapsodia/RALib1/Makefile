######################################################################
# This file was generated by Rapsodia (see www.mcs.anl.gov/Rapsodia) #
######################################################################


# generated by: ./configure.py


ifdef F90C
 ifneq "$(origin F90C)" "default"
  ifneq ($(F90C),gfortran)
   $(error "environment variable F90C is set to ${F90C} but Rapsodia is configured with gfortran")
  endif
 endif
endif
export F90C=gfortran
ifdef FFLAGS
 ifneq "$(origin FFLAGS)" "default"
  ifneq ($(FFLAGS), -O3)
   $(error "environment variable FFLAGS is set to ${FFLAGS} but Rapsodia is configured with  -O3")
  endif
 endif
endif
export FFLAGS= -O3
ifdef MODSEARCHFLAG
 ifneq "$(origin MODSEARCHFLAG)" "default"
  ifneq ($(MODSEARCHFLAG),-I)
   $(error "environment variable MODSEARCHFLAG is set to ${MODSEARCHFLAG} but Rapsodia is configured with -I")
  endif
 endif
endif
export MODSEARCHFLAG=-I
ifdef CXX
 ifneq "$(origin CXX)" "default"
  ifneq ($(CXX),g++)
   $(error "environment variable CXX is set to ${CXX} but Rapsodia is configured with g++")
  endif
 endif
endif
export CXX=g++
ifdef CXXFLAGS
 ifneq "$(origin CXXFLAGS)" "default"
  ifneq ($(CXXFLAGS), -O3)
   $(error "environment variable CXXFLAGS is set to ${CXXFLAGS} but Rapsodia is configured with  -O3")
  endif
 endif
endif
export CXXFLAGS= -O3
ifdef MIXLANG_LD_TOPCXX
 ifneq "$(origin MIXLANG_LD_TOPCXX)" "default"
  ifneq ($(MIXLANG_LD_TOPCXX),g++)
   $(error "environment variable MIXLANG_LD_TOPCXX is set to ${MIXLANG_LD_TOPCXX} but Rapsodia is configured with g++")
  endif
 endif
endif
export MIXLANG_LD_TOPCXX=g++
ifdef MIXLANG_LDFLAGS_TOPCXX_LIBSCXX
 ifneq "$(origin MIXLANG_LDFLAGS_TOPCXX_LIBSCXX)" "default"
  ifneq ($(MIXLANG_LDFLAGS_TOPCXX_LIBSCXX),-lgfortran)
   $(error "environment variable MIXLANG_LDFLAGS_TOPCXX_LIBSCXX is set to ${MIXLANG_LDFLAGS_TOPCXX_LIBSCXX} but Rapsodia is configured with -lgfortran")
  endif
 endif
endif
export MIXLANG_LDFLAGS_TOPCXX_LIBSCXX=-lgfortran
ifdef MIXLANG_LDFLAGS_TOPCXX_LIBSF90
 ifneq "$(origin MIXLANG_LDFLAGS_TOPCXX_LIBSF90)" "default"
  ifneq ($(MIXLANG_LDFLAGS_TOPCXX_LIBSF90),-lgfortran)
   $(error "environment variable MIXLANG_LDFLAGS_TOPCXX_LIBSF90 is set to ${MIXLANG_LDFLAGS_TOPCXX_LIBSF90} but Rapsodia is configured with -lgfortran")
  endif
 endif
endif
export MIXLANG_LDFLAGS_TOPCXX_LIBSF90=-lgfortran
ifdef MIXLANG_LD_TOPF90
 ifneq "$(origin MIXLANG_LD_TOPF90)" "default"
  ifneq ($(MIXLANG_LD_TOPF90),g++)
   $(error "environment variable MIXLANG_LD_TOPF90 is set to ${MIXLANG_LD_TOPF90} but Rapsodia is configured with g++")
  endif
 endif
endif
export MIXLANG_LD_TOPF90=g++
ifdef MIXLANG_LDFLAGS_TOPF90_LIBSCXX
 ifneq "$(origin MIXLANG_LDFLAGS_TOPF90_LIBSCXX)" "default"
  ifneq ($(MIXLANG_LDFLAGS_TOPF90_LIBSCXX),-lgfortran)
   $(error "environment variable MIXLANG_LDFLAGS_TOPF90_LIBSCXX is set to ${MIXLANG_LDFLAGS_TOPF90_LIBSCXX} but Rapsodia is configured with -lgfortran")
  endif
 endif
endif
export MIXLANG_LDFLAGS_TOPF90_LIBSCXX=-lgfortran
ifdef MIXLANG_LDFLAGS_TOPF90_LIBSF90
 ifneq "$(origin MIXLANG_LDFLAGS_TOPF90_LIBSF90)" "default"
  ifneq ($(MIXLANG_LDFLAGS_TOPF90_LIBSF90),-lgfortran)
   $(error "environment variable MIXLANG_LDFLAGS_TOPF90_LIBSF90 is set to ${MIXLANG_LDFLAGS_TOPF90_LIBSF90} but Rapsodia is configured with -lgfortran")
  endif
 endif
endif
export MIXLANG_LDFLAGS_TOPF90_LIBSF90=-lgfortran

export HOTF90NAMES= multiIndexUtil higherOrderTensorUtil
export HOTCPPNAMES= MultiIndex HigherOrderTensor
export RA_CXX_LIBS=-lRapsodia
export RA_F90_LIBS=-lRapsodia

export ENABLEREVERSEF90=0
# generated by: ./configure.py

# generic rules
%.o: %.f90
	$(F90C) $(FFLAGS) $(IPATH) $(MPATH)  -c $< -o $@
        
%.o: %.F90
	$(F90C) $(FFLAGS) $(IPATH) $(MPATH)  -c $< -o $@

%.o: %.cpp
	$(CXX) $(CXXFLAGS) $(IPATH) -c $< -o $@ 

RA_GEN_NAMES= \
RA1types \
RA1add \
RA1sub \
RA1uminus \
RA1mult \
RA1div \
RA1sqrt \
RA1log \
RA1exp \
RA1pow \
RA1asin \
RA1acos \
RA1sin \
RA1cos \
RA1sinh \
RA1cosh \
RA1min \
RA1max \
RA1abs \
RA1tan \
RA1atan \
RA1gt \
RA1ge \
RA1ne \
RA1lt \
RA1le \
RA1eq \
RA1eqadd \
RA1eqsub \
RA1eqmult \
RA1eqdiv


OBJS=$(addsuffix .o, $(RA_GEN_NAMES))
default: libRapsodia.a
libRapsodia.a: $(OBJS)
	ar rcs libRapsodia.a $?


clean:
	rm -f *.o *.a


.PHONY: default clean

# dependencies

RA1eqadd.o : RA1eqaddAA.ipp RA1eqadd.cpp RA1prec.hpp RA1eqaddAP.ipp RA1types.hpp RA1eqadd.hpp
RA1gt.o : RA1prec.hpp RA1gt.cpp RA1gt.hpp RA1types.hpp RA1gtAA.ipp RA1gtPA.ipp RA1gtAP.ipp
RA1sinh.o : RA1types.hpp RA1prec.hpp RA1sinh.cpp RA1sinhcosh.ipp RA1sinh.hpp
RA1max.o : RA1maxAP.ipp RA1prec.hpp RA1maxPA.ipp RA1types.hpp RA1max.hpp RA1max.cpp RA1maxAA.ipp
RA1types.o : RA1asgnA.ipp RA1set.ipp RA1toArray.ipp RA1get.ipp RA1prec.hpp RA1fromArray.ipp RA1types.hpp RA1types.cpp RA1asgnP.ipp
RA1acos.o : RA1acos.cpp RA1prec.hpp RA1acos.ipp RA1types.hpp RA1mult.hpp RA1uminus.hpp RA1sub.hpp RA1acos.hpp RA1sqrt.hpp RA1div.hpp
RA1sub.o : RA1sub.cpp RA1prec.hpp RA1subPA.ipp RA1types.hpp RA1subAP.ipp RA1sub.hpp RA1subAA.ipp
RA1add.o : RA1add.cpp RA1addAP.ipp RA1prec.hpp RA1types.hpp RA1addAA.ipp RA1add.hpp RA1addPA.ipp
RA1sqrt.o : RA1prec.hpp RA1sqrt.cpp RA1types.hpp RA1sqrt.ipp RA1sqrt.hpp
RA1cosh.o : RA1cosh.cpp RA1cosh.hpp RA1prec.hpp RA1types.hpp RA1sinhcosh.ipp
RA1eq.o : RA1eq.hpp RA1eqAA.ipp RA1prec.hpp RA1types.hpp RA1eq.cpp RA1eqAP.ipp RA1eqPA.ipp
RA1ge.o : RA1prec.hpp RA1ge.hpp RA1types.hpp RA1gePA.ipp RA1geAP.ipp RA1ge.cpp RA1geAA.ipp
RA1pow.o : RA1log.hpp RA1powPA.ipp RA1exp.hpp RA1pow.hpp RA1prec.hpp RA1types.hpp RA1mult.hpp RA1pow.cpp RA1powAP.ipp RA1powAA.ipp
RA1le.o : RA1lePA.ipp RA1prec.hpp RA1leAP.ipp RA1types.hpp RA1le.cpp RA1le.hpp RA1leAA.ipp
RA1div.o : RA1divPA.ipp RA1prec.hpp RA1divAP.ipp RA1types.hpp RA1divAA.ipp RA1div.hpp RA1div.cpp
RA1min.o : RA1minAP.ipp RA1minPA.ipp RA1prec.hpp RA1types.hpp RA1minAA.ipp RA1min.hpp RA1min.cpp
RA1ne.o : RA1prec.hpp RA1types.hpp RA1neAA.ipp RA1neAP.ipp RA1nePA.ipp RA1ne.hpp RA1ne.cpp
RA1eqsub.o : RA1eqsub.cpp RA1eqsubAP.ipp RA1prec.hpp RA1eqsubAA.ipp RA1types.hpp RA1eqsub.hpp
RA1lt.o : RA1ltPA.ipp RA1ltAP.ipp RA1lt.cpp RA1prec.hpp RA1types.hpp RA1ltAA.ipp RA1lt.hpp
RA1cos.o : RA1cos.hpp RA1cos.cpp RA1sincos.ipp RA1types.hpp RA1prec.hpp
RA1mult.o : RA1multAP.ipp RA1prec.hpp RA1mult.cpp RA1types.hpp RA1multPA.ipp RA1multAA.ipp RA1mult.hpp
RA1asin.o : RA1prec.hpp RA1asin.hpp RA1types.hpp RA1asin.cpp RA1sub.hpp RA1asin.ipp RA1sqrt.hpp RA1div.hpp RA1mult.hpp
RA1atan.o : RA1prec.hpp RA1atan.hpp RA1types.hpp RA1mult.hpp RA1add.hpp RA1atan.cpp RA1div.hpp RA1atan.ipp
RA1exp.o : RA1types.hpp RA1exp.ipp RA1exp.hpp RA1exp.cpp RA1prec.hpp
RA1eqmult.o : RA1prec.hpp RA1types.hpp RA1eqmultAP.ipp RA1eqmultAA.ipp RA1eqmult.cpp RA1eqmult.hpp
RA1abs.o : RA1abs.ipp RA1prec.hpp RA1abs.hpp RA1types.hpp RA1abs.cpp
RA1eqdiv.o : RA1prec.hpp RA1eqdivAA.ipp RA1types.hpp RA1div.hpp RA1eqdiv.hpp RA1eqdiv.cpp RA1eqdivAP.ipp
RA1uminus.o : RA1uminus.hpp RA1uminus.ipp RA1uminus.cpp RA1types.hpp RA1prec.hpp
RA1tan.o : RA1prec.hpp RA1tan.hpp RA1tan.cpp RA1types.hpp RA1tan.ipp RA1cos.hpp RA1div.hpp RA1sin.hpp
RA1log.o : RA1log.cpp RA1log.hpp RA1log.ipp RA1types.hpp RA1prec.hpp
RA1sin.o : RA1sin.cpp RA1sin.hpp RA1sincos.ipp RA1types.hpp RA1prec.hpp
