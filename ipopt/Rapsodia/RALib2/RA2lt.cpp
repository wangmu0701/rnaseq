// This file was generated by Rapsodia (see www.mcs.anl.gov/Rapsodia)
#include <iostream>
#include <cstdlib>
#include <cmath>
#include "RA2lt.hpp"

bool operator <(const RA2floatS& a, const RA2floatS& b) {
  bool r;
  #include "RA2ltAA.ipp"
  return r;
}

bool operator <(const RA2floatS& a, const RA2floatD& b) {
  bool r;
  #include "RA2ltAA.ipp"
  return r;
}

bool operator <(const RA2floatD& a, const RA2floatS& b) {
  bool r;
  #include "RA2ltAA.ipp"
  return r;
}

bool operator <(const RA2floatD& a, const RA2floatD& b) {
  bool r;
  #include "RA2ltAA.ipp"
  return r;
}

bool operator <(const RA2floatS& a, const int& b) {
  bool r;
  #include "RA2ltAP.ipp"
  return r;
}

bool operator <(const RA2floatS& a, const float& b) {
  bool r;
  #include "RA2ltAP.ipp"
  return r;
}

bool operator <(const RA2floatS& a, const double& b) {
  bool r;
  #include "RA2ltAP.ipp"
  return r;
}

bool operator <(const RA2floatD& a, const int& b) {
  bool r;
  #include "RA2ltAP.ipp"
  return r;
}

bool operator <(const RA2floatD& a, const float& b) {
  bool r;
  #include "RA2ltAP.ipp"
  return r;
}

bool operator <(const RA2floatD& a, const double& b) {
  bool r;
  #include "RA2ltAP.ipp"
  return r;
}

bool operator <(const int& a, const RA2floatS& b) {
  bool r;
  #include "RA2ltPA.ipp"
  return r;
}

bool operator <(const int& a, const RA2floatD& b) {
  bool r;
  #include "RA2ltPA.ipp"
  return r;
}

bool operator <(const float& a, const RA2floatS& b) {
  bool r;
  #include "RA2ltPA.ipp"
  return r;
}

bool operator <(const float& a, const RA2floatD& b) {
  bool r;
  #include "RA2ltPA.ipp"
  return r;
}

bool operator <(const double& a, const RA2floatS& b) {
  bool r;
  #include "RA2ltPA.ipp"
  return r;
}

bool operator <(const double& a, const RA2floatD& b) {
  bool r;
  #include "RA2ltPA.ipp"
  return r;
}

